/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { ConversationIdSchema, type ConversationId } from './ConversationId';
import { ResponseBaseSchema } from './ResponseBase';

import { intersect, object, parse, type Output } from 'valibot';

export const StartNewConversationResponseHeadSchema = intersect([
  ResponseBaseSchema,
  object({
    conversationId: ConversationIdSchema
  })
]);

export const StartNewConversationResponseRestSchema = ResponseBaseSchema;

/**
 * Head response to a request to start a conversation.
 * The generated conversation ID is included in the output, in addition to any outgoing activities.
 */
export interface StartNewConversationResponseHead extends Output<typeof StartNewConversationResponseHeadSchema> {
  /**
   * The conversation ID that was generated by the system.
   */
  conversationId: ConversationId;
}

/**
 * Rest response to a request to start a conversation.
 * The generated conversation ID is included in the output, in addition to any outgoing activities.
 */
export interface StartNewConversationResponseRest extends Output<typeof StartNewConversationResponseRestSchema> {}

export const parseStartNewConversationResponseHead = (data: unknown): StartNewConversationResponseHead =>
  parse(StartNewConversationResponseHeadSchema, data);

export const parseStartNewConversationResponseRest = (data: unknown): StartNewConversationResponseRest =>
  parse(StartNewConversationResponseRestSchema, data);
